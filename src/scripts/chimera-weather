#! /usr/bin/env python
# -*- coding: iso-8859-1 -*-

# chimera - observatory automation system
# Copyright (C) 2006-2007  P. Henrique Silva <henrique@astro.ufsc.br>

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.


import sys

from chimera.core.cli import ChimeraCLI, action
from chimera.interfaces.weatherstation import WeatherStation


class ChimeraWheater(ChimeraCLI):
    def __init__(self):
        ChimeraCLI.__init__(
            self, "chimera-weather", "Weather Controller", 0.1, port=9005)

        self.addHelpGroup("INFO", "Weather Station Information")

        self.addInstrument(name="weather",
                           cls="WeatherStation",
                           required=False,  # todo verify and change to True
                           help="Weather Station instrument to be used."
                                "If blank, try to guess from chimera.config",
                           helpGroup="INFO")

    @action(short="i",
            long="--info",
            helpGroup="INFO",
            help="Displays available parameters names and its respective values.")
    def info(self, options):
        self.out("=" * 40)
        self.out("Weather Station Parameters and Values:", end="\n")

        # todo
        # change these values to the instrument s ones (WeatherStation.get_humidity()?)

        humidity = 60
        temperature = 12
        wind_speed = 5.7
        wind_direction = 35
        dew_point = 6
        pressure = 13
        rain = 3

        self.out("humidity=" + str(humidity) + " " + str(WeatherStation.__config__["humidity_unit"]))
        self.out("temperature=" + str(temperature) + " " + str(WeatherStation.__config__["temperature_unit"]))
        self.out("wind_speed=" + str(wind_speed) + " " + str(WeatherStation.__config__["wind_unit"]))
        self.out("wind_direction=" + str(wind_direction) + " " + str(WeatherStation.__config__["wind_direction_unit"]))
        self.out("dew_point=" + str(dew_point) + " " + str(WeatherStation.__config__["dew_point_unit"]))
        self.out("pressure=" + str(pressure) + " " + str(WeatherStation.__config__["pressure_unit"]))
        self.out("rain=" + str(rain) + " " + str(WeatherStation.__config__["rain_unit"]))

        self.out("=" * 40)
        self.out(end="\n")
        print




def main():
    cli = ChimeraWheater()
    cli.run(sys.argv)
    cli.wait()


if __name__ == '__main__':
    main()
